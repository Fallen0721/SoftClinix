// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftClinix.Data;

#nullable disable

namespace SoftClinix.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240906120440_AddMunicipiosTable")]
    partial class AddMunicipiosTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SoftClinix.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Depa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Muni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("SoftClinix.Models.Paciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("AptoParaAtencion")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("apto_para_atencion");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("codigo_barras");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DocIdentidad")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("doc_identidad");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("EstadoAntecedentePaciente")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("estado_antecedente_paciente");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("estado_civil");

                    b.Property<string>("EstadoHistoria")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("estado_historia");

                    b.Property<DateTime?>("FNacimiento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("f_nacimiento");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_baja");

                    b.Property<DateTime?>("FechaControlFinal")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_control_final");

                    b.Property<DateTime?>("FechaControlInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_control_inicio");

                    b.Property<string>("GrupoSanguineo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("grupo_sanguineo");

                    b.Property<string>("Medico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NoHistoria")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("no_historia");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ocupacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PersonaReferencia")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("persona_referencia");

                    b.Property<string>("PlanAtencion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("plan_atencion");

                    b.Property<string>("Referencias")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefonos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("registro_pacientes");
                });

            modelBuilder.Entity("SoftClinix.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
